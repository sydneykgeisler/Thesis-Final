#Define dataset
Thatch <- as.factor(c(rep(2, 16), rep(5, 16), rep(8, 16)))
NSource <- rep(c(rep("AmmSulph", 4), rep("IBDU", 4), rep("SCUrea", 4),
rep("Urea", 4)), 3)
estY <- c(rep(6, 12), rep(4, 4), rep(c(rep(6, 4), rep(7, 4), rep(8, 4),
rep(5, 4)), 2))
Field <- as.factor(rep(1:4, 12))
ex <- cbind.data.frame(Thatch, NSource, estY, Field)
#Define variables
Formula = estY ~ NSource*Thatch + (1 | Field) + (1|Field:NSource)
Varcomp = c(0.008, 0.07)
Resid_var = 0.2
Data = ex
Family = "gaussian"
Effect = "NSource:Thatch"
Alpha = 0.05
#Debugging
if(Family == "gaussian") {
b1 <- lme4::lmer(Formula, data = Data)
} else {
b1 <- lme4::glmer(Formula, data = Data, family = Family)
}
Resid_var_TEMP_notlikely <<- Resid_var
random_effects <- names(lme4::ranef(b1))
new_random_effects <- random_effects
for (k in 1:length(random_effects)) {
if(is.element(":", unlist(strsplit(random_effects[k], "")))) {
new_random_effects[k] <- paste("`", random_effects[k], "`", sep = "")
}
}
form_char <- vector("list", length(Varcomp - 1))
if(is.null(Resid_var_TEMP_notlikely) == TRUE) {
fn <- function(x, use.var) {
dnorm(x, sqrt(use.var), 1e-6, log = TRUE)
}
} else {
fn <- function(x, use.var) {
dnorm(x, sqrt(use.var / Resid_var_TEMP_notlikely), 1e-6, log = TRUE)
}
}
fn.list <- lapply(1:length(Varcomp),
function(y) functional::Curry(fn, use.var = Varcomp[y]))
for (i in 1:length(Varcomp)) {
x <- 1:i
custom_list <- rep("custom_prior", times = i)
var_list <- paste(custom_list, x, sep = "")
assign(var_list[i], fn.list[[i]])
form_char[[i]] <- paste(new_random_effects[i], " ~ custom(", var_list[i],
", chol = TRUE", ", scale = 'log')", sep = "")
}
form_list <- lapply(form_char, noquote)
if (Family == "gaussian") {
if (length(new_random_effects > 1)) {
b2 <- blme::blmer(Formula, data = Data,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = form_list)
} else {
b2 <- blme::blmer(Formula, data = Data,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = new_random_effects ~ custom(custom_prior1,
chol = TRUE,
scale = "log"))
}
} else {
if (length(new_random_effects > 1)) {
b2 <- blme::bglmer(Formula, data = Data, family = Family,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = form_list)
} else {
b2 <- blme::bglmer(Formula, data = Data, family = Family,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = new_random_effects ~ custom(custom_prior1,
chol = TRUE,
scale = "log"))
}
}
aov <- anova(b2)
aov
Thatch <- as.factor(c(rep(2, 16), rep(5, 16), rep(8, 16)))
NSource <- rep(c(rep("AmmSulph", 4), rep("IBDU", 4), rep("SCUrea", 4),
rep("Urea", 4)), 3)
estY <- c(rep(6, 12), rep(4, 4), rep(c(rep(6, 4), rep(7, 4), rep(8, 4),
rep(5, 4)), 2))
Field <- as.factor(rep(1:4, 12))
ex <- cbind.data.frame(Thatch, NSource, estY, Field)
estY_edit <- rep(c(rep(6, 12), rep(4, 4)), 3)
epsilon <- seq(from = 0, to = 2, by = 0.1)
eps_vec <- vector("list", length(epsilon))
ex_diff <- vector("list", length(epsilon))
power_mat <- matrix(NA, nrow = length(epsilon), ncol = 1)
for (i in 1:length(epsilon)) {
eps_vec[[i]] <- c(rep(0, times = 20), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4),
rep(0, times = 4), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4))
ex_diff[[i]] <- cbind.data.frame(ex$Thatch, ex$NSource, estY_edit +
eps_vec[[i]], ex$Field)
colnames(ex_diff[[i]]) <- c("Thatch", "NSource", "estY", "Field")
power_mat[i] <- power_mm(Formula = estY ~ NSource*Thatch + (1 | Field) +
(1|Field:NSource), Varcomp = c(0.008, 0.07),
Resid_var = 0.2, Data = ex_diff[[i]],
Family = "gaussian", Effect = "NSource:Thatch",
Alpha = 0.05)
}
SAS_power <- matrix(c(0.05000, 0.058308, 0.06585, 0.08709, 0.22762, 0.35601,
0.22110, 0.65317, 0.78739, 0.46363, 0.94753, 0.97928,
0.99304, 0.99802, 0.99952, 0.99990, 0.99998, 1.00000,
1.00000, 1.00000, 1.00000),
nrow = length(epsilon), ncol = 1)
power_mat == SAS_power
power_mat
round(power_mat, 5)
devtools::load_all()
power_mat
SAS_power
round(power_mat, 5) == SAS_power
power_mat
round(power_mat, 5)
SAS_power
round(power_mat, 5) == round(SAS_power, 5)
round(SAS_power, 5)
Thatch <- as.factor(c(rep(2, 16), rep(5, 16), rep(8, 16)))
NSource <- rep(c(rep("AmmSulph", 4), rep("IBDU", 4), rep("SCUrea", 4),
rep("Urea", 4)), 3)
estY <- c(rep(6, 12), rep(4, 4), rep(c(rep(6, 4), rep(7, 4), rep(8, 4),
rep(5, 4)), 2))
Field <- as.factor(rep(1:4, 12))
ex <- cbind.data.frame(Thatch, NSource, estY, Field)
estY_edit <- rep(c(rep(6, 12), rep(4, 4)), 3)
epsilon <- seq(from = 0, to = 2, by = 0.1)
eps_vec <- vector("list", length(epsilon))
ex_diff <- vector("list", length(epsilon))
power_mat <- matrix(NA, nrow = length(epsilon), ncol = 1)
for (i in 1:length(epsilon)) {
eps_vec[[i]] <- c(rep(0, times = 20), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4),
rep(0, times = 4), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4))
ex_diff[[i]] <- cbind.data.frame(ex$Thatch, ex$NSource, estY_edit +
eps_vec[[i]], ex$Field)
colnames(ex_diff[[i]]) <- c("Thatch", "NSource", "estY", "Field")
power_mat[i] <- power_mm(Formula = estY ~ NSource*Thatch + (1 | Field) +
(1|Field:NSource), Varcomp = c(0.008, 0.07),
Resid_var = 0.2, Data = ex_diff[[i]],
Family = "gaussian", Effect = "NSource:Thatch",
Alpha = 0.05)
}
SAS_power <- matrix(c(0.05000, 0.05831, 0.08594, 0.13989, 0.22762, 0.35080,
0.44965, 0.65317, 0.78739, 0.88630, 0.94753, 0.97928,
0.99304, 0.99802, 0.99952, 0.99990, 0.99998, 1.00000,
1.00000, 1.00000, 1.00000),
nrow = length(epsilon), ncol = 1)
round(SAS_power, 5) == round(power_mat, 5)
round(SAS_power[7,], 5)
round(power_mat[7,], 5)
ex_diff[[7]]
Thatch <- as.factor(c(rep(2, 16), rep(5, 16), rep(8, 16)))
NSource <- rep(c(rep("AmmSulph", 4), rep("IBDU", 4), rep("SCUrea", 4),
rep("Urea", 4)), 3)
estY <- c(rep(6, 12), rep(4, 4), rep(c(rep(6, 4), rep(7, 4), rep(8, 4),
rep(5, 4)), 2))
Field <- as.factor(rep(1:4, 12))
ex <- cbind.data.frame(Thatch, NSource, estY, Field)
estY_edit <- rep(c(rep(6, 12), rep(4, 4)), 3)
epsilon <- seq(from = 0, to = 2, by = 0.1)
eps_vec <- vector("list", length(epsilon))
ex_diff <- vector("list", length(epsilon))
power_mat <- matrix(NA, nrow = length(epsilon), ncol = 1)
for (i in 1:length(epsilon)) {
eps_vec[[i]] <- c(rep(0, times = 20), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4),
rep(0, times = 4), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4))
ex_diff[[i]] <- cbind.data.frame(ex$Thatch, ex$NSource, estY_edit +
eps_vec[[i]], ex$Field)
colnames(ex_diff[[i]]) <- c("Thatch", "NSource", "estY", "Field")
power_mat[i] <- power_mm(Formula = estY ~ NSource*Thatch + (1 | Field) +
(1|Field:NSource), Varcomp = c(0.008, 0.07),
Resid_var = 0.2, Data = ex_diff[[i]],
Family = "gaussian", Effect = "NSource:Thatch",
Alpha = 0.05)
}
SAS_power <- matrix(c(0.05000, 0.05831, 0.08594, 0.13989, 0.22762, 0.35080,
0.49965, 0.65317, 0.78739, 0.88630, 0.94753, 0.97928,
0.99304, 0.99802, 0.99952, 0.99990, 0.99998, 1.00000,
1.00000, 1.00000, 1.00000),
nrow = length(epsilon), ncol = 1)
round(SAS_power, 5) == round(power_mat, 5)
devtools::load_all()
devtools::document()
Thatch <- as.factor(c(rep(2, 16), rep(5, 16), rep(8, 16)))
NSource <- rep(c(rep("AmmSulph", 4), rep("IBDU", 4), rep("SCUrea", 4),
rep("Urea", 4)), 3)
estY <- c(rep(6, 12), rep(4, 4), rep(c(rep(6, 4), rep(7, 4), rep(8, 4),
rep(5, 4)), 2))
Field <- as.factor(rep(1:4, 12))
ex <- cbind.data.frame(Thatch, NSource, estY, Field)
estY_edit <- rep(c(rep(6, 12), rep(4, 4)), 3)
epsilon <- seq(from = 0, to = 2, by = 0.1)
eps_vec <- vector("list", length(epsilon))
ex_diff <- vector("list", length(epsilon))
power_mat <- matrix(NA, nrow = length(epsilon), ncol = 1)
for (i in 1:length(epsilon)) {
eps_vec[[i]] <- c(rep(0, times = 20), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4),
rep(0, times = 4), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4))
ex_diff[[i]] <- cbind.data.frame(ex$Thatch, ex$NSource, estY_edit +
eps_vec[[i]], ex$Field)
colnames(ex_diff[[i]]) <- c("Thatch", "NSource", "estY", "Field")
power_mat[i] <- power_mm(Formula = estY ~ NSource*Thatch + (1 | Field) +
(1|Field:NSource), Varcomp = c(0.008, 0.07),
Resid_var = 0.2, Data = ex_diff[[i]],
Family = "gaussian", Effect = "NSource:Thatch",
Alpha = 0.05)
}
SAS_power <- matrix(c(0.05000, 0.05831, 0.08594, 0.13989, 0.22762, 0.35080,
0.49965, 0.65317, 0.78739, 0.88630, 0.94753, 0.97928,
0.99304, 0.99802, 0.99952, 0.99990, 0.99998, 1.00000,
1.00000, 1.00000, 1.00000),
nrow = length(epsilon), ncol = 1)
expect_equal(SAS_power, round(power_mat, 5))
Thatch <- as.factor(c(rep(2, 16), rep(5, 16), rep(8, 16)))
NSource <- rep(c(rep("AmmSulph", 4), rep("IBDU", 4), rep("SCUrea", 4),
rep("Urea", 4)), 3)
estY <- c(rep(6, 12), rep(4, 4), rep(c(rep(6, 4), rep(7, 4), rep(8, 4),
rep(5, 4)), 2))
Field <- as.factor(rep(1:4, 12))
ex <- cbind.data.frame(Thatch, NSource, estY, Field)
estY_edit <- rep(c(rep(6, 12), rep(4, 4)), 3)
epsilon <- seq(from = 0, to = 2, by = 0.1)
eps_vec <- vector("list", length(epsilon))
ex_diff <- vector("list", length(epsilon))
power_mat <- matrix(NA, nrow = length(epsilon), ncol = 1)
for (i in 1:length(epsilon)) {
eps_vec[[i]] <- c(rep(0, times = 20), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4),
rep(0, times = 4), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4))
ex_diff[[i]] <- cbind.data.frame(ex$Thatch, ex$NSource, estY_edit +
eps_vec[[i]], ex$Field)
colnames(ex_diff[[i]]) <- c("Thatch", "NSource", "estY", "Field")
power_mat[i] <- power_mm(Formula = estY ~ NSource*Thatch + (1 | Field) +
(1|Field:NSource), Varcomp = c(0.008, 0.07),
Resid_var = 0.2, Data = ex_diff[[i]],
Family = "gaussian", Effect = "NSource:Thatch",
Alpha = 0.05)
}
power_mat <- round(power_mat, digits = 5)
SAS_power <- matrix(c(0.05000, 0.05831, 0.08594, 0.13989, 0.22762, 0.35080,
0.49965, 0.65317, 0.78739, 0.88630, 0.94753, 0.97928,
0.99304, 0.99802, 0.99952, 0.99990, 0.99998, 1.00000,
1.00000, 1.00000, 1.00000),
nrow = length(epsilon), ncol = 1)
expect_equal(SAS_power, power_mat)
power_mm <- function(Formula, Varcomp, Resid_var = NULL, Data, Family, Effect, Alpha) {
if(Family == "gaussian") {
b1 <- lme4::lmer(Formula, data = Data)
} else {
b1 <- lme4::glmer(Formula, data = Data, family = Family)
}
Resid_var_TEMP_notlikely <<- Resid_var
random_effects <- names(lme4::ranef(b1))
new_random_effects <- random_effects
for (k in 1:length(random_effects)) {
if(is.element(":", unlist(strsplit(random_effects[k], "")))) {
new_random_effects[k] <- paste("`", random_effects[k], "`", sep = "")
}
}
form_char <- vector("list", length(Varcomp - 1))
if(is.null(Resid_var_TEMP_notlikely) == TRUE) {
fn <- function(x, use.var) {
dnorm(x, sqrt(use.var), 1e-6, log = TRUE)
}
} else {
fn <- function(x, use.var) {
dnorm(x, sqrt(use.var / Resid_var_TEMP_notlikely), 1e-6, log = TRUE)
}
}
fn.list <- lapply(1:length(Varcomp),
function(y) functional::Curry(fn, use.var = Varcomp[y]))
for (i in 1:length(Varcomp)) {
x <- 1:i
custom_list <- rep("custom_prior", times = i)
var_list <- paste(custom_list, x, sep = "")
assign(var_list[i], fn.list[[i]])
form_char[[i]] <- paste(new_random_effects[i], " ~ custom(", var_list[i],
", chol = TRUE", ", scale = 'log')", sep = "")
}
form_list <- lapply(form_char, noquote)
if (Family == "gaussian") {
if (length(new_random_effects > 1)) {
b2 <- blme::blmer(Formula, data = Data,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = form_list)
} else {
b2 <- blme::blmer(Formula, data = Data,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = new_random_effects ~ custom(custom_prior1,
chol = TRUE,
scale = "log"))
}
} else {
if (length(new_random_effects > 1)) {
b2 <- blme::bglmer(Formula, data = Data, family = Family,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = form_list)
} else {
b2 <- blme::bglmer(Formula, data = Data, family = Family,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = new_random_effects ~ custom(custom_prior1,
chol = TRUE,
scale = "log"))
}
}
aov <- anova(b2)
reff_index <- which(rownames(aov) == Effect)
f <- aov$`F value`[reff_index]
noncent_param <- aov$npar[reff_index] * f
b3 <- lmerTest::lmer(Formula, data = Data)
aov_b3 <- anova(b3, ddf = "Kenward-Roger")
reff_index_b3 <- which(rownames(aov_b3) == Effect)
ndf <- aov$npar[reff_index_b3]
ddf <- aov_b3$DenDF[reff_index_b3]
FCrit <- qf(1 - Alpha, ndf, ddf, 0)
power <- 1 - pf(FCrit, ndf, ddf, noncent_param)
power
}
Thatch <- as.factor(c(rep(2, 16), rep(5, 16), rep(8, 16)))
NSource <- rep(c(rep("AmmSulph", 4), rep("IBDU", 4), rep("SCUrea", 4),
rep("Urea", 4)), 3)
estY <- c(rep(6, 12), rep(4, 4), rep(c(rep(6, 4), rep(7, 4), rep(8, 4),
rep(5, 4)), 2))
Field <- as.factor(rep(1:4, 12))
ex <- cbind.data.frame(Thatch, NSource, estY, Field)
estY_edit <- rep(c(rep(6, 12), rep(4, 4)), 3)
epsilon <- seq(from = 0, to = 2, by = 0.1)
eps_vec <- vector("list", length(epsilon))
ex_diff <- vector("list", length(epsilon))
power_mat <- matrix(NA, nrow = length(epsilon), ncol = 1)
for (i in 1:length(epsilon)) {
eps_vec[[i]] <- c(rep(0, times = 20), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4),
rep(0, times = 4), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4))
ex_diff[[i]] <- cbind.data.frame(ex$Thatch, ex$NSource, estY_edit +
eps_vec[[i]], ex$Field)
colnames(ex_diff[[i]]) <- c("Thatch", "NSource", "estY", "Field")
power_mat[i] <- power_mm(Formula = estY ~ NSource*Thatch + (1 | Field) +
(1|Field:NSource), Varcomp = c(0.008, 0.07),
Resid_var = 0.2, Data = ex_diff[[i]],
Family = "gaussian", Effect = "NSource:Thatch",
Alpha = 0.05)
}
power_mat <- round(power_mat, digits = 5)
SAS_power <- matrix(c(0.05000, 0.05831, 0.08594, 0.13989, 0.22762, 0.35080,
0.49965, 0.65317, 0.78739, 0.88630, 0.94753, 0.97928,
0.99304, 0.99802, 0.99952, 0.99990, 0.99998, 1.00000,
1.00000, 1.00000, 1.00000),
nrow = length(epsilon), ncol = 1)
expect_equal(SAS_power, power_mat)
power_mat
power_mat
library(roxygen2)
Run devtools::document()
devtools::document()
?
h
?Final
?Untitled1
?Final
ex_diff[[5]]
power_mat
power_mat
Thatch <- as.factor(c(rep(2, 16), rep(5, 16), rep(8, 16)))
NSource <- rep(c(rep("AmmSulph", 4), rep("IBDU", 4), rep("SCUrea", 4),
rep("Urea", 4)), 3)
estY <- c(rep(6, 12), rep(4, 4), rep(c(rep(6, 4), rep(7, 4), rep(8, 4),
rep(5, 4)), 2))
Field <- as.factor(rep(1:4, 12))
ex <- cbind.data.frame(Thatch, NSource, estY, Field)
estY_edit <- rep(c(rep(6, 12), rep(4, 4)), 3)
epsilon <- seq(from = 0, to = 2, by = 0.1)
eps_vec <- vector("list", length(epsilon))
ex_diff <- vector("list", length(epsilon))
power_mat <- matrix(NA, nrow = length(epsilon), ncol = 1)
for (i in 1:length(epsilon)) {
eps_vec[[i]] <- c(rep(0, times = 20), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4),
rep(0, times = 4), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4))
ex_diff[[i]] <- cbind.data.frame(ex$Thatch, ex$NSource, estY_edit +
eps_vec[[i]], ex$Field)
colnames(ex_diff[[i]]) <- c("Thatch", "NSource", "estY", "Field")
power_mat[i] <- power_mm(Formula = estY ~ NSource*Thatch + (1 | Field) +
(1|Field:NSource), Varcomp = c(0.008, 0.07),
Resid_var = 0.2, Data = ex_diff[[i]],
Family = "gaussian", Effect = "NSource:Thatch",
Alpha = 0.05)
}
power_mat <- round(power_mat, digits = 5)
SAS_power <- matrix(c(0.05000, 0.05831, 0.08594, 0.13989, 0.22762, 0.35080,
0.49965, 0.65317, 0.78739, 0.88630, 0.94753, 0.97928,
0.99304, 0.99802, 0.99952, 0.99990, 0.99998, 1.00000,
1.00000, 1.00000, 1.00000),
nrow = length(epsilon), ncol = 1)
power_mat
power_mm <- function(Formula, Varcomp, Resid_var = NULL, Data, Family, Effect, Alpha) {
if(Family == "gaussian") {
b1 <- lme4::lmer(Formula, data = Data)
} else {
b1 <- lme4::glmer(Formula, data = Data, family = Family)
}
Resid_var_TEMP_notlikely <<- Resid_var
random_effects <- names(lme4::ranef(b1))
new_random_effects <- random_effects
for (k in 1:length(random_effects)) {
if(is.element(":", unlist(strsplit(random_effects[k], "")))) {
new_random_effects[k] <- paste("`", random_effects[k], "`", sep = "")
}
}
form_char <- vector("list", length(Varcomp - 1))
if(is.null(Resid_var_TEMP_notlikely) == TRUE) {
fn <- function(x, use.var) {
dnorm(x, sqrt(use.var), 1e-6, log = TRUE)
}
} else {
fn <- function(x, use.var) {
dnorm(x, sqrt(use.var / Resid_var_TEMP_notlikely), 1e-6, log = TRUE)
}
}
fn.list <- lapply(1:length(Varcomp),
function(y) functional::Curry(fn, use.var = Varcomp[y]))
for (i in 1:length(Varcomp)) {
x <- 1:i
custom_list <- rep("custom_prior", times = i)
var_list <- paste(custom_list, x, sep = "")
assign(var_list[i], fn.list[[i]])
form_char[[i]] <- paste(new_random_effects[i], " ~ custom(", var_list[i],
", chol = TRUE", ", scale = 'log')", sep = "")
}
form_list <- lapply(form_char, noquote)
if (Family == "gaussian") {
if (length(new_random_effects > 1)) {
b2 <- blme::blmer(Formula, data = Data,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = form_list)
} else {
b2 <- blme::blmer(Formula, data = Data,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = new_random_effects ~ custom(custom_prior1,
chol = TRUE,
scale = "log"))
}
} else {
if (length(new_random_effects > 1)) {
b2 <- blme::bglmer(Formula, data = Data, family = Family,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = form_list)
} else {
b2 <- blme::bglmer(Formula, data = Data, family = Family,
resid.prior = point(sqrt(Resid_var_TEMP_notlikely)),
cov.prior = new_random_effects ~ custom(custom_prior1,
chol = TRUE,
scale = "log"))
}
}
aov <- anova(b2)
reff_index <- which(rownames(aov) == Effect)
f <- aov$`F value`[reff_index]
noncent_param <- aov$npar[reff_index] * f
b3 <- lmerTest::lmer(Formula, data = Data)
aov_b3 <- anova(b3, ddf = "Kenward-Roger")
reff_index_b3 <- which(rownames(aov_b3) == Effect)
ndf <- aov$npar[reff_index_b3]
ddf <- aov_b3$DenDF[reff_index_b3]
FCrit <- qf(1 - Alpha, ndf, ddf, 0)
power <- 1 - pf(FCrit, ndf, ddf, noncent_param)
power
}
Thatch <- as.factor(c(rep(2, 16), rep(5, 16), rep(8, 16)))
NSource <- rep(c(rep("AmmSulph", 4), rep("IBDU", 4), rep("SCUrea", 4),
rep("Urea", 4)), 3)
estY <- c(rep(6, 12), rep(4, 4), rep(c(rep(6, 4), rep(7, 4), rep(8, 4),
rep(5, 4)), 2))
Field <- as.factor(rep(1:4, 12))
ex <- cbind.data.frame(Thatch, NSource, estY, Field)
estY_edit <- rep(c(rep(6, 12), rep(4, 4)), 3)
epsilon <- seq(from = 0, to = 2, by = 0.1)
eps_vec <- vector("list", length(epsilon))
ex_diff <- vector("list", length(epsilon))
power_mat <- matrix(NA, nrow = length(epsilon), ncol = 1)
for (i in 1:length(epsilon)) {
eps_vec[[i]] <- c(rep(0, times = 20), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4),
rep(0, times = 4), rep(epsilon[i], times = 4),
rep(2 * epsilon[i], times = 4), rep(epsilon[i], times = 4))
ex_diff[[i]] <- cbind.data.frame(ex$Thatch, ex$NSource, estY_edit +
eps_vec[[i]], ex$Field)
colnames(ex_diff[[i]]) <- c("Thatch", "NSource", "estY", "Field")
power_mat[i] <- power_mm(Formula = estY ~ NSource*Thatch + (1 | Field) +
(1|Field:NSource), Varcomp = c(0.008, 0.07),
Resid_var = 0.2, Data = ex_diff[[i]],
Family = "gaussian", Effect = "NSource:Thatch",
Alpha = 0.05)
}
power_mat <- round(power_mat, digits = 5)
SAS_power <- matrix(c(0.05000, 0.05831, 0.08594, 0.13989, 0.22762, 0.35080,
0.49965, 0.65317, 0.78739, 0.88630, 0.94753, 0.97928,
0.99304, 0.99802, 0.99952, 0.99990, 0.99998, 1.00000,
1.00000, 1.00000, 1.00000),
nrow = length(epsilon), ncol = 1)
